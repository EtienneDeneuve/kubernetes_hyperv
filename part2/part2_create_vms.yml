- hosts: hyperv
  tasks:

    - name: "Adding xHyperV module using DSC"
      win_psmodule:
        name: xHyper-V
        state: present
      become: True

    - name: "create folders"
      win_file:
        path: "C:\\Kubernetes\\{{ item }}"
        state: directory
      with_items:
        - master
        - worker01
        - worker02

    - name: "copy vhd in folders"
      win_copy:
        src: "C:\\Users\\Administrator\\Documents\\git\\webcast\\part1\\packer\\output-hyperv-iso\\Virtual Hard Disks\\ubuntu-bionic.vhdx"
        dest: "c:\\Kubernetes\\{{ item }}\\{{ item }}.vhdx"
        remote_src: yes
        force: no
      with_items:
        - master
        - worker01
        - worker02

    - name: "Launch dsc configuration script"
      win_shell: C:\Users\Administrator\Documents\git\webcast\part2\dsc\config_vm.ps1
      become: true
    
    - name: "Retrieving IP of each vm"
      win_shell: Get-VMNetworkAdapter -VMName * | ConvertTo-Json
      register: vms
      become: true
    
    - set_fact:
        jsonvms: "{{ vms.stdout | from_json }}"
    
    - name: "Grab ipv4 only"
      set_fact:
        vmiplist: "{{ jsonvms | json_query(filter) }}"
      vars:
        filter: >-
          [].IPAddresses
    
    - name: "Debug"
      debug:
        msg: "{{ item[0] }}"
        verbosity: 2
      with_items:
        - "{{ vmiplist }}"
    
    - name: "Generate new inventory"
      template:
        src: "{{ playbook_dir }}/template.j2"
        dest: "{{ playbook_dir }}/../inventory/kube.yml"
      vars:
        master_ip: "{{ vmiplist[0][0] }}"
        node01_ip: "{{ vmiplist[1][0] }}"
        node02_ip: "{{ vmiplist[2][0] }}"
      delegate_to: localhost